name: Deploy staging

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Détection des modifications
      - name: Detect changes
        id: detect_changes
        run: |
          echo "::set-output name=frontend_changed::$(git diff --name-only HEAD~1..HEAD | grep -q '^frontend/' && echo true || echo false)"
          echo "::set-output name=backend_changed::$(git diff --name-only HEAD~1..HEAD | grep -q '^backend/' && echo true || echo false)"

      # Déploiement du frontend React-Vite si modifié
      - name: Install dependencies and build frontend
        if: steps.detect_changes.outputs.frontend_changed == 'true'
        run: |
          cd frontend
          npm install
          npm run build

      # Construction de l'image Docker pour le frontend
      - name: Build Docker image for frontend
        if: steps.detect_changes.outputs.frontend_changed == 'true'
        run: |
          cd frontend
          docker build -t myapp-frontend:${{ github.sha }} .

      # Déploiement du backend Node.js Express si modifié
      - name: Install dependencies and start backend
        if: steps.detect_changes.outputs.backend_changed == 'true'
        run: |
          cd ../backend
          npm install
          npm run start &

      # Construction de l'image Docker pour le backend
      - name: Build Docker image for backend
        if: steps.detect_changes.outputs.backend_changed == 'true'
        run: |
          cd ../backend
          docker build -t myapp-backend:${{ github.sha }} .

      # Déploiement du frontend sur le serveur de staging
      - name: Deploy frontend on staging server
        run: echo 'Frontend ready to be deploy in staging'

      # Déploiement du backend sur le serveur de staging
      - name: Deploy backend on staging server
        run: echo 'Backend ready to be deploy in staging'
